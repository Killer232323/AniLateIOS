window.Anixtar = window.Anixtar || {};

(function(namespace) {

    const fetchVideo = async (id) => {
        try {
            const response = await fetch(`https://api-s2.anixart.tv/episode/${id}`);
            if (!response.ok) throw new Error(`HTTP error ${response.status}`);

            const data = await response.json();
            const result = [];

            // Получение всех дубляжей и видео параллельно
            const dubbingPromises = data.types.map(async (dubbing) => {
                const responsePlayer = await fetch(`https://api-s2.anixart.tv/episode/${id}/${dubbing.id}`);
                if (!responsePlayer.ok) throw new Error(`HTTP error animeData ${responsePlayer.status}`);

                const players = await responsePlayer.json();
                const playerPromises = players.sources.map(async (player) => {
                    const responseVideo = await fetch(`https://api-s2.anixart.tv/episode/${id}/${dubbing.id}/${player.id}`);
                    if (!responseVideo.ok) throw new Error(`HTTP error videoId ${responseVideo.status}`);

                    const video = await responseVideo.json();
                    const videoItems = video.episodes.map(videoItem => ({
                        dubbingName: dubbing.name,
                        playerName: player.name,
                        videoId: videoItem["@id"],
                        videoUrl: videoItem.url,
                        videoNumber: videoItem.position,
                        videoName: videoItem.name,
                        dateUpload: videoItem.addedDate,
                        isFrame: videoItem.iframe,
                    }));

                    result.push(...videoItems);
                });
                return Promise.all(playerPromises);
            });

            await Promise.all(dubbingPromises);
            return JSON.stringify(result, null, 2);
        } catch (error) {
            return `Ошибка: ${error.message}`;
        }
    };

    const fetchFromUrl = async (url) => {
        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error(`HTTP error ${response.status}`);
            }
            const data = await response.json();
            // Получаем список данных аниме
            const animeData = data.content.map(anime => ({
                url: anime.id,
                title: anime.title_ru,
                views: anime.views,
                thumbnail_url: anime.image,
                status: anime.status.id
            }));
            // Преобразуем данные в JSON-строку
            return JSON.stringify(animeData);
        } catch (error) {
            return `Ошибка: ${error.message}`;
        }
    }

    const fetchFromDetails = async (id = 10907) => {
        try {
            const response = await fetch(`https://api.anixart.tv/release/${id}`);
            if (!response.ok) {
                throw new Error(`HTTP error ${response.status}`);
            }
            const data = await response.json();
            const responce = data.release;
            // Преобразуем данные в объект
            const animeData = {
                //   ["response"]: {
                url: responce.id,
                title: responce.title_ru,
                descr: responce.description,
                thumbnail_url: responce.image,
                status: status(responce.status.id)
                //  }
            };
            // Преобразуем данные в JSON-строку
            return JSON.stringify(animeData);
        } catch (error) {
            return `Ошибка: ${error.message}`;
        }
    }

    const status = (int) => {
        switch (int) {
            case 1: return 3
            case 2: return 2
            case 3: return 1
            default: return 0
        }
    }

    namespace.FetchVideos = (id = 3019) => fetchVideo(id);
    namespace.FetchDetails = (id = 19348) => fetchFromDetails(id);

    namespace.FetchPopular = async (offset = 0) => {
        try {
            const url = `https://api.anixart.tv/filter/${offset}?token=&studio=&category=&status=&year=&episodes=&sort=1&country=&season=&duration=&extended_mode=true`;
            const data = await fetchFromUrl(url);
            console.log(data)
            return data;
        } catch (error) {
            console.error(error)
            return error;
        }
    }

    namespace.FetchLatestUpdates = async (offset = 0) => {
        try {
            const url = `https://api.anixart.tv/filter/${offset}?token=&studio=&category=&status=&year=&episodes=&sort=&country=&season=&duration=&extended_mode=true`;
            const data = await fetchFromUrl(url);
            console.log(data)
            return data;
        } catch (error) {
            console.error(error)
            return error;
        }
    }

})(window.Anixtar);
